<Activity mc:Ignorable="sap sap2010" x:Class="ABN_Checker_Dispatcher" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Filename" Type="InArgument(x:String)" />
    <x:Property Name="in_OrchestratorQueuename" Type="InArgument(x:String)" />
    <x:Property Name="in_FileAssetCredential" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1141,701</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ABN_Checker_Dispatcher_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="ABN_Checker_Dispatcher" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">270,40 210,40 210,136.04</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">110,136.04</av:Point>
          <av:Size x:Key="ShapeSize">200,138</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Extract Data from Excel file using Orchestrator and Adding Queue Items from the Data" DisplayName="ABN Dispatcher" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap:VirtualizedContainerService.HintSize="1343,2597" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="ABNChecker.xlsx" Name="ExcelFile" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="Count" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign the file path of excel" sap:VirtualizedContainerService.HintSize="1301,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[in_Filename]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[ExcelFile]</InArgument>
            </Assign.Value>
          </Assign>
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1301,2405" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1267,2319" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Excel_Access" DisplayName="Get Asset from orchestrator" sap:VirtualizedContainerService.HintSize="1225,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                    <ui:GetRobotAsset.Value>
                      <OutArgument x:TypeArguments="x:String">[in_FileAssetCredential]</OutArgument>
                    </ui:GetRobotAsset.Value>
                  </ui:GetRobotAsset>
                  <If Condition="[in_FileAssetCredential =&quot;Bb@1234&quot;]" DisplayName="If condition" sap:VirtualizedContainerService.HintSize="1225,2050" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName=" Sequence for the Excel process (passed)" sap:VirtualizedContainerService.HintSize="628,1893" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard ReadFormatting="{x:Null}" DisplayName="Open the password protected excel file" sap:VirtualizedContainerService.HintSize="586,1801" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" Password="[in_FileAssetCredential]" ResizeWindow="None" WorkbookPath="ABNChecker.xlsx">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="552,1535" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="Dt_ABN" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="510,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;abn_input&quot;)]" SaveTo="[Dt_ABN]" />
                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[Dt_ABN]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510,428" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="Row_item" />
                                          <Variable x:TypeArguments="x:String" Name="Reg" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Reg]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[system.Text.RegularExpressions.Regex.Replace(CurrentRow(0).tostring,"\D","")]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="ABNQueue">
                                          <ui:AddQueueItem.ItemInformation>
                                            <InArgument x:TypeArguments="x:String" x:Key="Item">[CurrentRow.ToString]</InArgument>
                                          </ui:AddQueueItem.ItemInformation>
                                        </ui:AddQueueItem>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[Count+1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                </ui:ForEachRow>
                                <umab:OutlookApplicationCard Account="carl.tomazar@blackbook.ai" AccountMismatchBehavior="UseDefaultEmailAccount" DisplayName="Use Desktop Outlook App" sap:VirtualizedContainerService.HintSize="510,768" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_1">
                                  <umab:OutlookApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlook" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,587" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <umab:SendMailX Bcc="{x:Null}" Body="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Outlook]" BodyDocumentPath="[The ABNChecker_Dispatcher has successfully run By{{name}} . &#xA;&#xA;Total Items Added To queue: &lt;TOTALITEMS&gt;&#xA;&#xA;Thanks!&#xA;Hello!&#xA;&#xA;The ABNChecker_Dispatcher has successfully run By{{name}} . &#xA;&#xA;Total Items Added To queue: &lt;TOTALITEMS&gt;&#xA;&#xA;Thanks!&#xA;Hello!&#xA;&#xA;The ABNChecker_Dispatcher has successfully run By{{name}} . &#xA;&#xA;Total Items Added To queue: &lt;TOTALITEMS&gt;&#xA;&#xA;Thanks!]" Cc="carl.tomazar@blackbook.ai" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,364" sap2010:WorkflowViewState.IdRef="SendMailX_1" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[&quot; ABNChecker_Dispatcher &quot;+ DateAndTime.Now.ToString(&quot;dd/MM/yyyy HH:mm tt&quot;)]" To="beth.lodangco@blackbook.ai" UseDocumentAsBody="False">
                                          <umab:SendMailX.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                          </umab:SendMailX.Files>
                                          <umab:SendMailX.HtmlBodyFromFile>
                                            <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                                              <umabh:HtmlContentArgument.RuntimeImages>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                              </umabh:HtmlContentArgument.RuntimeImages>
                                              <umabh:HtmlContentArgument.ValueMappings>
                                                <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                                                  <umabh:HtmlTextValueMapping Name="name" Value="[system.Environment.UserName]" />
                                                  <umabh:HtmlTextValueMapping Name="Count" Value="[Count.ToString]" />
                                                </scg:List>
                                              </umabh:HtmlContentArgument.ValueMappings>
                                            </umabh:HtmlContentArgument>
                                          </umab:SendMailX.HtmlBodyFromFile>
                                        </umab:SendMailX>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;PASSED&quot;]" />
                                      </Sequence>
                                    </ActivityAction>
                                  </umab:OutlookApplicationCard.Body>
                                </umab:OutlookApplicationCard>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence for failed password input in Excel" sap:VirtualizedContainerService.HintSize="552,860" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <umab:OutlookApplicationCard Account="carl.tomazar@blackbook.ai" AccountMismatchBehavior="UseDefaultEmailAccount" DisplayName="Use Desktop Outlook App" sap:VirtualizedContainerService.HintSize="510,768" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_2">
                          <umab:OutlookApplicationCard.Body>
                            <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlookai" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,587" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <umab:SendMailX Bcc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Outlookai]" Body="[&quot;Cannot open input file &quot;+in_Filename+&quot; due To invalid password. Please Check!&quot;]" BodyDocumentPath="[The ABNChecker_Dispatcher has successfully run By{{name}} . &#xA;&#xA;Total Items Added To queue: &lt;TOTALITEMS&gt;&#xA;&#xA;Thanks!&#xA;Hello!&#xA;&#xA;The ABNChecker_Dispatcher has successfully run By{{name}} . &#xA;&#xA;Total Items Added To queue: &lt;TOTALITEMS&gt;&#xA;&#xA;Thanks!&#xA;Hello!&#xA;&#xA;The ABNChecker_Dispatcher has successfully run By{{name}} . &#xA;&#xA;Total Items Added To queue: &lt;TOTALITEMS&gt;&#xA;&#xA;Thanks!]" BodyType="Text" Cc="carl.tomazar@blackbook.ai" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,364" sap2010:WorkflowViewState.IdRef="SendMailX_2" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="ABNChecker_Dispatcher Exception" To="beth.lodangco@blackbook.ai" UseDocumentAsBody="False">
                                  <umab:SendMailX.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </umab:SendMailX.Files>
                                  <umab:SendMailX.HtmlBodyFromFile>
                                    <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                                      <umabh:HtmlContentArgument.RuntimeImages>
                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                      </umabh:HtmlContentArgument.RuntimeImages>
                                      <umabh:HtmlContentArgument.ValueMappings>
                                        <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                                          <umabh:HtmlTextValueMapping Name="FileName" Value="[ExcelFile]" />
                                        </scg:List>
                                      </umabh:HtmlContentArgument.ValueMappings>
                                    </umabh:HtmlContentArgument>
                                  </umab:SendMailX.HtmlBodyFromFile>
                                </umab:SendMailX>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;FAILED&quot;]" />
                              </Sequence>
                            </ActivityAction>
                          </umab:OutlookApplicationCard.Body>
                        </umab:OutlookApplicationCard>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
          </ueab:ExcelProcessScopeX>
        </Sequence>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>